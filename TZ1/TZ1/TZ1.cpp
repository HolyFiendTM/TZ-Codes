#include <iostream> //подключаем библиотеку для ввода-вывода
#include <fstream> //подключаем библиотеку для работы с файлами
#include <string> //подключаем библиотеку для работы со строками (в данном случае для работы getline())
using namespace std;
int main()
{
    ifstream f; //создаём объект f для чтения файла
    f.open("CreativeTask1.txt"); //открываем файл и связываем его с объектом f
    int max_count = 0; //переменная, в которой будет храниться максимальная длина участка сломанного бордюра
    int count = 0; //переменная для нахождения длины каждого участка сломанного бордюра
    string s; //создаём строку s
    getline(f, s); //копируем данные объекта f в строку s
    f.close(); //закрываем файл
    for (int i = 0; i < s.size(); i++) { //проходимся по всей строке
        if (s[i] == '-') { //если символ строки - это "-" (встретился сломанный бордюр), то 
            count++; //count увеличивается на 1
            max_count = max(max_count, count); //в max_count записывается наибольшее значение между max_count и count (нам же нужно найти максимально возможное значение count)
        }
        else { //иначе (если символ строки - это не "-" (встретился целый бордюр))
            count = 0; //count сбрасывается (участок сломанных бордюров закончился, соотвественно, нужно будет заново считать, когда дойдём до следующего участка сломанных бордюров)
        }
    }
    cout << max_count; //выводим максимальное значение длины участка сломанного бордюра
}
//общая идея: если встретился "-", то продолжаем увеличивать count на 1 (сразу же сравниваем с текущим max_count и заносим туда наибольшее значение), иначе сбрасываем count до нуля и начинаем сначала, только уже для следующего участка сломанных бордюров